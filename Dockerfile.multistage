# syntax=docker/dockerfile:1

## Build
FROM golang:1.20.1-buster AS build
ENV DEBIAN_FRONTEND noninteractive

WORKDIR /app
RUN apt-get update -y && \
    apt-get install -y --no-install-recommends \
        libasound2-dev \
        alsa-utils && \
    apt-get clean
# pre-copy/cache go.mod for pre-downloading dependencies and only redownloading them in subsequent builds if they change
COPY go.mod go.sum index.html upload.html	 ./
COPY *.go ./
COPY /data/fard.json /data/fart.json /data/test.json ./data/
COPY /data/img/poop.jpg ./data/img/
COPY /data/snd/fard.mp3 /data/snd/fart.mp3 ./data/snd/
 RUN go mod download && go mod verify

COPY . .
RUN go build  -o /fardserver
EXPOSE 10000
## Deply
FROM debian:buster-slim 

WORKDIR /
COPY --from=build /usr/lib/x86_64-linux-gnu/libasound.so.2 /usr/lib/x86_64-linux-gnu/libasound.so.2
COPY --from=build /usr/lib/x86_64-linux-gnu/libasound.so.2.0.0 /usr/lib/x86_64-linux-gnu/libasound.so.2.0.0
COPY --from=build /usr/share/alsa/alsa.conf /usr/share/alsa/alsa.conf
COPY --from=build /usr/share/alsa/cards/aliases.conf /usr/share/alsa/cards/aliases.conf
COPY --from=build /usr/share/alsa/* /usr/share/alsa/
COPY --from=build /usr/share/alsa/pcm/default.conf /usr/share/alsa/pcm/default.conf
# pre-copy/cache go.
COPY --from=build /fardserver /fardserver
COPY --from=build /app/index.html /app/upload.html	 ./
COPY --from=build /app/data/*.json  ./data/
COPY --from=build /app/data/img/*.jpg ./data/img/
COPY --from=build /app/data/snd/*.mp3  ./data/snd/
COPY --from=build /usr/share/alsa/pcm/dmix.conf /usr/share/alsa/pcm/dmix.conf
COPY --from=build /usr/share/alsa/pcm/* /usr/share/alsa/pcm/
EXPOSE 10000


ENTRYPOINT ["./fardserver"]
